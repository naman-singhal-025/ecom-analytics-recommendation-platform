version: '3.8'

services:
  # Zookeeper is required by Kafka for coordination
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    restart: unless-stopped
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # Kafka message broker
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    restart: unless-stopped
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  # MongoDB database
  mongodb:
    image: mongo:7.0
    restart: unless-stopped
    hostname: mongodb
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb_data:/data/db

  # MongoDB UI for easy database viewing
  mongo-express:
    image: mongo-express:latest
    restart: unless-stopped
    hostname: mongo-express
    container_name: mongo-express
    depends_on:
      - mongodb
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password

  # Elasticsearch for search and analytics
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.15
    restart: unless-stopped
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"  # limits memory to 256MB
    ports:
      - "9200:9200" # HTTP REST API port
      - "9300:9300" # Transport/Node communication port
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  # Kibana for visualizing Elasticsearch data
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.15
    restart: unless-stopped
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

  # Redis for caching
  redis:
    image: redis:7.4-alpine
    restart: unless-stopped
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

   # PostgreSQL for transactional data
  postgres:
    image: postgres:16.4-alpine
    restart: unless-stopped
    container_name: postgres
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Logstash for data processing
  logstash:
    build:
      context: ./logstash
    restart: unless-stopped
    container_name: logstash
    depends_on:
      - elasticsearch
    ports:
      - "5044:5044"
    volumes:
      - logstash_data:/usr/share/logstash/data

volumes:
  mongodb_data:
  elasticsearch_data:
  redis_data:
  postgres_data:
  logstash_data: